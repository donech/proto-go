// Code generated by protoc-gen-go. DO NOT EDIT.
// source: donech/erp/v1/gate_api.proto

package erpv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//LoginRequest.
type LoginRequest struct {
	Account              string   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6587789a37ce27e9, []int{0}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

//LoginResponse.
type LoginResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6587789a37ce27e9, []int{1}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LoginResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

//ReadinessRequest.
type ReadinessRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadinessRequest) Reset()         { *m = ReadinessRequest{} }
func (m *ReadinessRequest) String() string { return proto.CompactTextString(m) }
func (*ReadinessRequest) ProtoMessage()    {}
func (*ReadinessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6587789a37ce27e9, []int{2}
}

func (m *ReadinessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadinessRequest.Unmarshal(m, b)
}
func (m *ReadinessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadinessRequest.Marshal(b, m, deterministic)
}
func (m *ReadinessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadinessRequest.Merge(m, src)
}
func (m *ReadinessRequest) XXX_Size() int {
	return xxx_messageInfo_ReadinessRequest.Size(m)
}
func (m *ReadinessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadinessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadinessRequest proto.InternalMessageInfo

//ReadinessResponse.
type ReadinessResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadinessResponse) Reset()         { *m = ReadinessResponse{} }
func (m *ReadinessResponse) String() string { return proto.CompactTextString(m) }
func (*ReadinessResponse) ProtoMessage()    {}
func (*ReadinessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6587789a37ce27e9, []int{3}
}

func (m *ReadinessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadinessResponse.Unmarshal(m, b)
}
func (m *ReadinessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadinessResponse.Marshal(b, m, deterministic)
}
func (m *ReadinessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadinessResponse.Merge(m, src)
}
func (m *ReadinessResponse) XXX_Size() int {
	return xxx_messageInfo_ReadinessResponse.Size(m)
}
func (m *ReadinessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadinessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadinessResponse proto.InternalMessageInfo

func (m *ReadinessResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadinessResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

//LivenessRequest.
type LivenessRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LivenessRequest) Reset()         { *m = LivenessRequest{} }
func (m *LivenessRequest) String() string { return proto.CompactTextString(m) }
func (*LivenessRequest) ProtoMessage()    {}
func (*LivenessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6587789a37ce27e9, []int{4}
}

func (m *LivenessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LivenessRequest.Unmarshal(m, b)
}
func (m *LivenessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LivenessRequest.Marshal(b, m, deterministic)
}
func (m *LivenessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LivenessRequest.Merge(m, src)
}
func (m *LivenessRequest) XXX_Size() int {
	return xxx_messageInfo_LivenessRequest.Size(m)
}
func (m *LivenessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LivenessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LivenessRequest proto.InternalMessageInfo

//LivenessResponse.
type LivenessResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LivenessResponse) Reset()         { *m = LivenessResponse{} }
func (m *LivenessResponse) String() string { return proto.CompactTextString(m) }
func (*LivenessResponse) ProtoMessage()    {}
func (*LivenessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6587789a37ce27e9, []int{5}
}

func (m *LivenessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LivenessResponse.Unmarshal(m, b)
}
func (m *LivenessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LivenessResponse.Marshal(b, m, deterministic)
}
func (m *LivenessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LivenessResponse.Merge(m, src)
}
func (m *LivenessResponse) XXX_Size() int {
	return xxx_messageInfo_LivenessResponse.Size(m)
}
func (m *LivenessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LivenessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LivenessResponse proto.InternalMessageInfo

func (m *LivenessResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LivenessResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "donech.erp.v1.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "donech.erp.v1.LoginResponse")
	proto.RegisterType((*ReadinessRequest)(nil), "donech.erp.v1.ReadinessRequest")
	proto.RegisterType((*ReadinessResponse)(nil), "donech.erp.v1.ReadinessResponse")
	proto.RegisterType((*LivenessRequest)(nil), "donech.erp.v1.LivenessRequest")
	proto.RegisterType((*LivenessResponse)(nil), "donech.erp.v1.LivenessResponse")
}

func init() { proto.RegisterFile("donech/erp/v1/gate_api.proto", fileDescriptor_6587789a37ce27e9) }

var fileDescriptor_6587789a37ce27e9 = []byte{
	// 393 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0xc1, 0x8e, 0xda, 0x30,
	0x10, 0x55, 0x42, 0x53, 0x60, 0x44, 0x0a, 0x58, 0x54, 0x8a, 0x52, 0x54, 0x50, 0x4e, 0x55, 0x0f,
	0x89, 0xd2, 0xde, 0x38, 0x15, 0x44, 0x55, 0x55, 0xe5, 0x80, 0x72, 0xa8, 0xaa, 0x0a, 0xa9, 0x72,
	0x93, 0x51, 0x1a, 0x15, 0x6c, 0x37, 0x36, 0xe9, 0xbd, 0xbf, 0xd0, 0xef, 0xd8, 0x1f, 0xd9, 0xeb,
	0xfe, 0xc2, 0x7e, 0xc8, 0x2a, 0x4e, 0x60, 0x09, 0x5a, 0xf6, 0xb0, 0x37, 0xbf, 0x79, 0xe3, 0xf7,
	0x3c, 0xcf, 0x03, 0xe3, 0x84, 0x33, 0x8c, 0x7f, 0x05, 0x98, 0x8b, 0xa0, 0x08, 0x83, 0x94, 0x2a,
	0xfc, 0x41, 0x45, 0xe6, 0x8b, 0x9c, 0x2b, 0x4e, 0xec, 0x8a, 0xf5, 0x31, 0x17, 0x7e, 0x11, 0xba,
	0xe3, 0x94, 0xf3, 0x74, 0x8b, 0x01, 0x15, 0x59, 0x40, 0x19, 0xe3, 0x8a, 0xaa, 0x8c, 0x33, 0x59,
	0x35, 0x7b, 0x4b, 0xe8, 0xad, 0x78, 0x9a, 0xb1, 0x08, 0xff, 0xec, 0x51, 0x2a, 0xe2, 0x40, 0x9b,
	0xc6, 0x31, 0xdf, 0x33, 0xe5, 0x18, 0x53, 0xe3, 0x4d, 0x37, 0x3a, 0x40, 0xe2, 0x42, 0x47, 0x50,
	0x29, 0xff, 0xf2, 0x3c, 0x71, 0x4c, 0x4d, 0x1d, 0xb1, 0xf7, 0x05, 0xec, 0x5a, 0x45, 0x0a, 0xce,
	0x24, 0x12, 0x02, 0xcf, 0x62, 0x9e, 0xa0, 0xd6, 0xb0, 0x22, 0x7d, 0x26, 0x03, 0x68, 0xed, 0x64,
	0x5a, 0xdf, 0x2d, 0x8f, 0x64, 0x04, 0x96, 0xe2, 0xbf, 0x91, 0x39, 0x2d, 0x5d, 0xab, 0x80, 0x47,
	0x60, 0x10, 0x21, 0x4d, 0x32, 0x86, 0x52, 0xd6, 0xcf, 0xf2, 0xe6, 0x30, 0x3c, 0xa9, 0x3d, 0x62,
	0xe2, 0x40, 0x7b, 0x87, 0x52, 0xd2, 0x14, 0x6b, 0xa3, 0x03, 0xf4, 0x86, 0xd0, 0x5f, 0x65, 0x05,
	0x9e, 0xaa, 0x7e, 0x80, 0xc1, 0x7d, 0xe9, 0x29, 0xa2, 0xef, 0xae, 0x4c, 0x68, 0x7f, 0xa2, 0x0a,
	0xe7, 0xeb, 0xcf, 0xe4, 0x1b, 0x58, 0x3a, 0x04, 0xf2, 0xca, 0x6f, 0xfc, 0x80, 0x7f, 0x1a, 0xb0,
	0x3b, 0x7e, 0x98, 0xac, 0xdc, 0xbd, 0xd1, 0xbf, 0x9b, 0xdb, 0xff, 0xe6, 0x0b, 0xaf, 0x5b, 0xfe,
	0xeb, 0xb6, 0xa4, 0x66, 0xc6, 0x5b, 0x82, 0xd0, 0x3d, 0x4e, 0x4f, 0x26, 0x67, 0x02, 0xe7, 0x59,
	0xb9, 0xd3, 0xcb, 0x0d, 0xb5, 0xcb, 0x4b, 0xed, 0xd2, 0x27, 0x76, 0xe9, 0x92, 0x1f, 0x95, 0x29,
	0x74, 0x0e, 0x71, 0x90, 0xd7, 0xe7, 0xcf, 0x6c, 0x46, 0xe7, 0x4e, 0x2e, 0xf2, 0xcd, 0x49, 0x48,
	0x4f, 0x4f, 0x52, 0xb3, 0x8b, 0x19, 0x0c, 0x63, 0xbe, 0x6b, 0xde, 0x5d, 0xf4, 0x74, 0x82, 0x22,
	0x5b, 0x97, 0x1b, 0xb9, 0x36, 0xbe, 0x5b, 0x98, 0x8b, 0x22, 0xbc, 0x36, 0xed, 0xa5, 0x6e, 0xdb,
	0x7c, 0xcc, 0xc5, 0xe6, 0x6b, 0xf8, 0xf3, 0xb9, 0xde, 0xd8, 0xf7, 0x77, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x2f, 0x37, 0x73, 0x05, 0xfe, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GateAPIClient is the client API for GateAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GateAPIClient interface {
	//Login.
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	//Readiness.
	Readiness(ctx context.Context, in *ReadinessRequest, opts ...grpc.CallOption) (*ReadinessResponse, error)
	//Liveness.
	Liveness(ctx context.Context, in *LivenessRequest, opts ...grpc.CallOption) (*LivenessResponse, error)
}

type gateAPIClient struct {
	cc *grpc.ClientConn
}

func NewGateAPIClient(cc *grpc.ClientConn) GateAPIClient {
	return &gateAPIClient{cc}
}

func (c *gateAPIClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/donech.erp.v1.GateAPI/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gateAPIClient) Readiness(ctx context.Context, in *ReadinessRequest, opts ...grpc.CallOption) (*ReadinessResponse, error) {
	out := new(ReadinessResponse)
	err := c.cc.Invoke(ctx, "/donech.erp.v1.GateAPI/Readiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gateAPIClient) Liveness(ctx context.Context, in *LivenessRequest, opts ...grpc.CallOption) (*LivenessResponse, error) {
	out := new(LivenessResponse)
	err := c.cc.Invoke(ctx, "/donech.erp.v1.GateAPI/Liveness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GateAPIServer is the server API for GateAPI service.
type GateAPIServer interface {
	//Login.
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	//Readiness.
	Readiness(context.Context, *ReadinessRequest) (*ReadinessResponse, error)
	//Liveness.
	Liveness(context.Context, *LivenessRequest) (*LivenessResponse, error)
}

func RegisterGateAPIServer(s *grpc.Server, srv GateAPIServer) {
	s.RegisterService(&_GateAPI_serviceDesc, srv)
}

func _GateAPI_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GateAPIServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/donech.erp.v1.GateAPI/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GateAPIServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GateAPI_Readiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadinessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GateAPIServer).Readiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/donech.erp.v1.GateAPI/Readiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GateAPIServer).Readiness(ctx, req.(*ReadinessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GateAPI_Liveness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LivenessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GateAPIServer).Liveness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/donech.erp.v1.GateAPI/Liveness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GateAPIServer).Liveness(ctx, req.(*LivenessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GateAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "donech.erp.v1.GateAPI",
	HandlerType: (*GateAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _GateAPI_Login_Handler,
		},
		{
			MethodName: "Readiness",
			Handler:    _GateAPI_Readiness_Handler,
		},
		{
			MethodName: "Liveness",
			Handler:    _GateAPI_Liveness_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "donech/erp/v1/gate_api.proto",
}
