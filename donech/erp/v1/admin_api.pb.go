// Code generated by protoc-gen-go. DO NOT EDIT.
// source: donech/erp/v1/admin_api.proto

package erpv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//GetSupplierListRequest.
type GetSupplierListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSupplierListRequest) Reset()         { *m = GetSupplierListRequest{} }
func (m *GetSupplierListRequest) String() string { return proto.CompactTextString(m) }
func (*GetSupplierListRequest) ProtoMessage()    {}
func (*GetSupplierListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18e449515d4242bc, []int{0}
}

func (m *GetSupplierListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSupplierListRequest.Unmarshal(m, b)
}
func (m *GetSupplierListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSupplierListRequest.Marshal(b, m, deterministic)
}
func (m *GetSupplierListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSupplierListRequest.Merge(m, src)
}
func (m *GetSupplierListRequest) XXX_Size() int {
	return xxx_messageInfo_GetSupplierListRequest.Size(m)
}
func (m *GetSupplierListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSupplierListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSupplierListRequest proto.InternalMessageInfo

//GetSupplierListResponse.
type GetSupplierListResponse struct {
	Code                 int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 []*Supplier `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetSupplierListResponse) Reset()         { *m = GetSupplierListResponse{} }
func (m *GetSupplierListResponse) String() string { return proto.CompactTextString(m) }
func (*GetSupplierListResponse) ProtoMessage()    {}
func (*GetSupplierListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18e449515d4242bc, []int{1}
}

func (m *GetSupplierListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSupplierListResponse.Unmarshal(m, b)
}
func (m *GetSupplierListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSupplierListResponse.Marshal(b, m, deterministic)
}
func (m *GetSupplierListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSupplierListResponse.Merge(m, src)
}
func (m *GetSupplierListResponse) XXX_Size() int {
	return xxx_messageInfo_GetSupplierListResponse.Size(m)
}
func (m *GetSupplierListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSupplierListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSupplierListResponse proto.InternalMessageInfo

func (m *GetSupplierListResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetSupplierListResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetSupplierListResponse) GetData() []*Supplier {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*GetSupplierListRequest)(nil), "donech.erp.v1.GetSupplierListRequest")
	proto.RegisterType((*GetSupplierListResponse)(nil), "donech.erp.v1.GetSupplierListResponse")
}

func init() { proto.RegisterFile("donech/erp/v1/admin_api.proto", fileDescriptor_18e449515d4242bc) }

var fileDescriptor_18e449515d4242bc = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4d, 0xc9, 0xcf, 0x4b,
	0x4d, 0xce, 0xd0, 0x4f, 0x2d, 0x2a, 0xd0, 0x2f, 0x33, 0xd4, 0x4f, 0x4c, 0xc9, 0xcd, 0xcc, 0x8b,
	0x4f, 0x2c, 0xc8, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x85, 0x48, 0xeb, 0xa5, 0x16,
	0x15, 0xe8, 0x95, 0x19, 0x4a, 0xc9, 0xa0, 0xaa, 0xce, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x2d,
	0x86, 0x28, 0x96, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f,
	0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x2c, 0xc9, 0xcc, 0xcf, 0x83, 0xca, 0x2a, 0x49, 0x70, 0x89, 0xb9,
	0xa7, 0x96, 0x04, 0x97, 0x16, 0x14, 0xe4, 0x64, 0xa6, 0x16, 0xf9, 0x64, 0x16, 0x97, 0x04, 0xa5,
	0x16, 0x96, 0xa6, 0x16, 0x97, 0x28, 0x95, 0x70, 0x89, 0x63, 0xc8, 0x14, 0x17, 0xe4, 0xe7, 0x15,
	0xa7, 0x0a, 0x09, 0x71, 0xb1, 0x24, 0xe7, 0xa7, 0xa4, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06,
	0x81, 0xd9, 0x42, 0x12, 0x5c, 0xec, 0x50, 0x8b, 0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0x60,
	0x5c, 0x21, 0x6d, 0x2e, 0x96, 0x94, 0xc4, 0x92, 0x44, 0x09, 0x66, 0x05, 0x66, 0x0d, 0x6e, 0x23,
	0x71, 0x3d, 0x14, 0xc7, 0xeb, 0xc1, 0x2c, 0x08, 0x02, 0x2b, 0x32, 0x6a, 0x66, 0xe4, 0xe2, 0x70,
	0x04, 0x79, 0xd7, 0x31, 0xc0, 0x53, 0xa8, 0x9c, 0x8b, 0x1f, 0xcd, 0x09, 0x42, 0xaa, 0x68, 0xda,
	0xb1, 0x3b, 0x5e, 0x4a, 0x8d, 0x90, 0x32, 0x88, 0x4f, 0x94, 0x44, 0x9b, 0x2e, 0x3f, 0x99, 0xcc,
	0xc4, 0x2f, 0xc4, 0x0b, 0x0a, 0xb8, 0x62, 0xa8, 0x8a, 0x62, 0x27, 0x6b, 0x2e, 0xc1, 0xe4, 0xfc,
	0x5c, 0x54, 0x33, 0x9c, 0x78, 0x21, 0xee, 0x2a, 0xc8, 0x0c, 0x00, 0x85, 0x5c, 0x00, 0x63, 0x14,
	0x6b, 0x6a, 0x51, 0x41, 0x99, 0xe1, 0x29, 0x26, 0x5e, 0x17, 0xb0, 0xba, 0x18, 0xd7, 0xa2, 0x82,
	0x98, 0x30, 0xc3, 0x24, 0x36, 0x70, 0xc8, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x03,
	0xae, 0xc9, 0xc5, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdminAPIClient is the client API for AdminAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminAPIClient interface {
	//GetSupplierList 获取供货商列表.
	GetSupplierList(ctx context.Context, in *GetSupplierListRequest, opts ...grpc.CallOption) (*GetSupplierListResponse, error)
}

type adminAPIClient struct {
	cc *grpc.ClientConn
}

func NewAdminAPIClient(cc *grpc.ClientConn) AdminAPIClient {
	return &adminAPIClient{cc}
}

func (c *adminAPIClient) GetSupplierList(ctx context.Context, in *GetSupplierListRequest, opts ...grpc.CallOption) (*GetSupplierListResponse, error) {
	out := new(GetSupplierListResponse)
	err := c.cc.Invoke(ctx, "/donech.erp.v1.AdminAPI/GetSupplierList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminAPIServer is the server API for AdminAPI service.
type AdminAPIServer interface {
	//GetSupplierList 获取供货商列表.
	GetSupplierList(context.Context, *GetSupplierListRequest) (*GetSupplierListResponse, error)
}

func RegisterAdminAPIServer(s *grpc.Server, srv AdminAPIServer) {
	s.RegisterService(&_AdminAPI_serviceDesc, srv)
}

func _AdminAPI_GetSupplierList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSupplierListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminAPIServer).GetSupplierList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/donech.erp.v1.AdminAPI/GetSupplierList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminAPIServer).GetSupplierList(ctx, req.(*GetSupplierListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AdminAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "donech.erp.v1.AdminAPI",
	HandlerType: (*AdminAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSupplierList",
			Handler:    _AdminAPI_GetSupplierList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "donech/erp/v1/admin_api.proto",
}
